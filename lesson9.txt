const express = require('express');
const morgan = require('morgan');
const mongoose = require('mongoose');
const Blog = require('./models/blog');

// express app //
const app = express();


// connect to mongodb //
const dbURI = 'mongodb+srv://wldnhriri:Mongoliach1n4@cluster0.8nu42.mongodb.net/node-ninja?retryWrites=true&w=majority&appName=Cluster0';

mongoose.connect(dbURI)
    .then((result) => app.listen(3000))
    .catch((err) => console.log(err));


// register view engine //
app.set('view engine', 'ejs');


// middleware & static file
app.use(express.static('public'));
app.use(morgan('dev'));


// mongoose and mongo sandbox routes //
app.get('/add-blog', (req, res) => {
    const blog = new Blog({
        title: 'new blog 2',
        snippet: 'about my new blog',
        body: 'more about my new blog'
    })

    blog.save()
        .then((result) => {
            res.send(result);
        })
        .catch((err) => {
            console.log(err);
        })
})

app.get('/all-blogs', (req, res) => {
    Blog.find()
        .then((result) => {
            res.send(result);
        })
        .catch((err) => {
            console.log(err);
        })
})

app.get('/single-blog', (req, res) => {
    Blog.findById('674184e4ad12eb77a35fba00')
        .then((result) => {
            res.send(result);
        })
        .catch((err) => {
            console.log(err);
        })
})


app.get('/', (req, res) => {
    const blogs = [
        { title: 'Indonesia national team lost to japan 4-0', snippet: 'Lorem ipsum dolor sit amet consectetur' },
        { title: 'Meet gus dikuy in Indonesia University', snippet: 'Lorem ipsum dolor sit amet consectetur' },
        { title: 'Doubt to round 5 relying on riko simanjuntak', snippet: 'Lorem ipsum dolor sit amet consectetur' },
    ];
    res.render('index', { title: 'Home', blogs });
})

app.get('/about', (req, res) => {
    res.render('about', { title: 'About' });
})

app.get('/blogs/create', (req, res) => {
    res.render('create', { title: 'Create a new blog' });
})


// 404 page //
app.use((req, res) => {
    res.status(404).render('404', { title: '404' });
})